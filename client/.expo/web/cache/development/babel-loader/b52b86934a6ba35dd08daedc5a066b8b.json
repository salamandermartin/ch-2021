{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\Users\\\\junz8\\\\desktop\\\\ch-2021\\\\client\\\\src\\\\SearchScreen.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport { StatusBar } from 'expo-status-bar';\nimport React, { Component } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport { ListItem, SearchBar } from 'react-native-elements';\nimport FoodEmission from \"./foodemissions.json\";\n\nvar SearchScreen = function (_React$Component) {\n  _inherits(SearchScreen, _React$Component);\n\n  var _super = _createSuper(SearchScreen);\n\n  function SearchScreen(props) {\n    var _this;\n\n    _classCallCheck(this, SearchScreen);\n\n    _this = _super.call(this, props);\n\n    _this.makeRemoteRequest = function () {\n      _this.setState({\n        data: FoodEmission\n      });\n    };\n\n    _this.renderSeperator = function () {\n      return React.createElement(View, {\n        style: {\n          height: 1,\n          width: '86%',\n          backgroundColor: '#739086',\n          marginLeft: '14%'\n        },\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 7\n        }\n      });\n    };\n\n    _this.searchFilterFunction = function (text) {};\n\n    _this.renderHeader = function () {\n      return React.createElement(SearchBar, {\n        placeholder: \"Type Here...\",\n        lightTheme: true,\n        round: true,\n        onChangeText: function onChangeText(text) {\n          return _this.searchFilterFunction(text);\n        },\n        autoCorrect: false,\n        value: _this.state.value,\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 7\n        }\n      });\n    };\n\n    _this.state = {\n      loading: false,\n      data: [],\n      error: null\n    };\n    _this.arrayholder = [];\n    return _this;\n  }\n\n  _createClass(SearchScreen, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.makeRemoteRequest();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      if (this.state.loading) {\n        return React.createElement(View, {\n          style: {\n            flex: 1,\n            alignItems: 'center',\n            justifyContent: 'center'\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 9\n          }\n        }, React.createElement(ActivityIndicator, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 11\n          }\n        }));\n      }\n\n      return React.createElement(View, {\n        style: {\n          flex: 1\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 7\n        }\n      }, React.createElement(FlatList, {\n        data: this.state.data,\n        renderItem: function renderItem(_ref) {\n          var item = _ref.item;\n          return React.createElement(ListItem, {\n            bottomDivider: true,\n            __self: _this2,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 13\n            }\n          }, React.createElement(ListItem.Content, {\n            __self: _this2,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 15\n            }\n          }, React.createElement(ListItem.Title, {\n            __self: _this2,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 17\n            }\n          }, item.name), React.createElement(ListItem.Subtitle, {\n            __self: _this2,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 17\n            }\n          }, item.emission)));\n        },\n        ItemSeparatorComponent: this.renderSeparator,\n        ListHeaderComponent: this.renderHeader,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 9\n        }\n      }));\n    }\n  }]);\n\n  return SearchScreen;\n}(React.Component);\n\nexport default SearchScreen;","map":{"version":3,"sources":["C:/Users/junz8/desktop/ch-2021/client/src/SearchScreen.js"],"names":["StatusBar","React","Component","ListItem","SearchBar","FoodEmission","SearchScreen","props","makeRemoteRequest","setState","data","renderSeperator","height","width","backgroundColor","marginLeft","searchFilterFunction","text","renderHeader","state","value","loading","error","arrayholder","flex","alignItems","justifyContent","item","name","emission","renderSeparator"],"mappings":"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","sourcesContent":["import { StatusBar } from 'expo-status-bar';\r\nimport React, { Component } from 'react';\r\nimport { View, Text, FlatList, ActivityIndicator } from 'react-native';\r\nimport { ListItem, SearchBar } from 'react-native-elements';\r\nimport FoodEmission from './foodemissions.json'\r\n\r\nclass SearchScreen extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    \r\n    this.state = {\r\n      loading: false,\r\n      data: [],\r\n      error: null,\r\n    };\r\n\r\n    this.arrayholder = [];\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.makeRemoteRequest();\r\n  }\r\n\r\n  makeRemoteRequest = () => {\r\n    this.setState({\r\n      data: FoodEmission,\r\n    });\r\n  };\r\n\r\n  renderSeperator = () => {\r\n    return (\r\n      <View\r\n        style={{\r\n          height: 1,\r\n          width: '86%',\r\n          backgroundColor: '#739086',\r\n          marginLeft: '14%',\r\n        }}\r\n      />\r\n    );\r\n  };\r\n  searchFilterFunction = text => {\r\n\r\n  };\r\n\r\n  renderHeader = () => {\r\n    return (\r\n      <SearchBar\r\n        placeholder=\"Type Here...\"\r\n        lightTheme\r\n        round\r\n        onChangeText={text => this.searchFilterFunction(text)}\r\n        autoCorrect={false}\r\n        value={this.state.value}\r\n      />\r\n    );\r\n  };\r\n\r\n  render() {\r\n    if (this.state.loading) {\r\n      return (\r\n        <View style={{ flex: 1, alignItems: 'center', justifyContent: 'center' }}>\r\n          <ActivityIndicator />\r\n        </View>\r\n      );\r\n    }\r\n    return (\r\n      <View style={{ flex: 1 }}>\r\n        <FlatList\r\n          data={this.state.data}\r\n          renderItem={({ item }) => (\r\n            <ListItem bottomDivider >\r\n              <ListItem.Content>\r\n                <ListItem.Title>{item.name}</ListItem.Title>\r\n                <ListItem.Subtitle>{item.emission}</ListItem.Subtitle>\r\n              </ListItem.Content>\r\n            </ListItem>\r\n          )}\r\n        \r\n          ItemSeparatorComponent={this.renderSeparator}\r\n          ListHeaderComponent={this.renderHeader}\r\n        />\r\n      </View>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SearchScreen;"]},"metadata":{},"sourceType":"module"}