{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\Users\\\\Brendan Gubbins\\\\desktop\\\\ch-2021\\\\client\\\\src\\\\InputScreen.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from \"react\";\nimport \"react-native-gesture-handler\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\n\nvar InputScreen = function (_Component) {\n  _inherits(InputScreen, _Component);\n\n  var _super = _createSuper(InputScreen);\n\n  function InputScreen() {\n    var _this;\n\n    _classCallCheck(this, InputScreen);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.state = {\n      food: '',\n      serving: ''\n    };\n\n    _this.handleFood = function (text) {\n      _this.setState({\n        food: text\n      });\n    };\n\n    _this.handleServing = function (text) {\n      _this.setState({\n        serving: text\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(InputScreen, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(View, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 7\n        }\n      }, React.createElement(View, {\n        style: styles_is.input_container,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 9\n        }\n      }, React.createElement(View, {\n        style: styles_is.input,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 11\n        }\n      }, React.createElement(TextInput, {\n        placeholder: \"Input your food here\",\n        onChangeText: this.handleFood,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 13\n        }\n      })), React.createElement(View, {\n        style: styles_is.input,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 11\n        }\n      }, React.createElement(TextInput, {\n        placeholder: \"Serving size\",\n        onChangeText: this.handleServing,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 13\n        }\n      }))), React.createElement(TouchableOpacity, {\n        onPress: function onPress() {\n          return alert(food);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 9\n        }\n      }, React.createElement(View, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 11\n        }\n      }, React.createElement(Text, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 13\n        }\n      }, \" Alert button \"))));\n    }\n  }]);\n\n  return InputScreen;\n}(Component);\n\n;\nexport default InputScreen;\nvar styles_is = StyleSheet.create({\n  input_container: {\n    backgroundColor: \"#D8D8D6\",\n    flexDirection: 'column',\n    justifyContent: 'space-around',\n    alignItems: 'center'\n  },\n  input: {\n    margin: 50,\n    borderWidth: 5,\n    borderRadius: 15,\n    padding: 40\n  },\n  text_input: {\n    width: \"auto\"\n  }\n});","map":{"version":3,"sources":["C:/Users/Brendan Gubbins/desktop/ch-2021/client/src/InputScreen.js"],"names":["React","Component","InputScreen","state","food","serving","handleFood","text","setState","handleServing","styles_is","input_container","input","alert","StyleSheet","create","backgroundColor","flexDirection","justifyContent","alignItems","margin","borderWidth","borderRadius","padding","text_input","width"],"mappings":";;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,8BAAP;;;;;;;;IAGMC,W;;;;;;;;;;;;;;;UACJC,K,GAAQ;AACNC,MAAAA,IAAI,EAAG,EADD;AAENC,MAAAA,OAAO,EAAG;AAFJ,K;;UAIRC,U,GAAa,UAACC,IAAD,EAAU;AACrB,YAAKC,QAAL,CAAc;AAAEJ,QAAAA,IAAI,EAAGG;AAAT,OAAd;AACD,K;;UACDE,a,GAAgB,UAACF,IAAD,EAAU;AACxB,YAAKC,QAAL,CAAe;AAAEH,QAAAA,OAAO,EAAGE;AAAZ,OAAf;AACD,K;;;;;;;6BACQ;AACP,aACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAEG,SAAS,CAACC,eAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAED,SAAS,CAACE,KAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,SAAD;AACE,QAAA,WAAW,EAAC,sBADd;AAEE,QAAA,YAAY,EAAI,KAAKN,UAFvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CADF,EAOE,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAEI,SAAS,CAACE,KAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,SAAD;AACE,QAAA,WAAW,EAAC,cADd;AAEE,QAAA,YAAY,EAAG,KAAKH,aAFtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CAPF,CADF,EAeE,oBAAC,gBAAD;AACE,QAAA,OAAO,EAAI;AAAA,iBACTI,KAAK,CAACT,IAAD,CADI;AAAA,SADb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAKE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADF,CALF,CAfF,CADF;AA2BD;;;;EAvCuBH,S;;AAwCzB;AAED,eAAeC,WAAf;AAEA,IAAMQ,SAAS,GAAGI,UAAU,CAACC,MAAX,CAAkB;AAClCJ,EAAAA,eAAe,EAAE;AACfK,IAAAA,eAAe,EAAE,SADF;AAEfC,IAAAA,aAAa,EAAE,QAFA;AAGfC,IAAAA,cAAc,EAAE,cAHD;AAIfC,IAAAA,UAAU,EAAE;AAJG,GADiB;AAOlCP,EAAAA,KAAK,EAAE;AACLQ,IAAAA,MAAM,EAAE,EADH;AAELC,IAAAA,WAAW,EAAE,CAFR;AAGLC,IAAAA,YAAY,EAAE,EAHT;AAILC,IAAAA,OAAO,EAAE;AAJJ,GAP2B;AAalCC,EAAAA,UAAU,EAAE;AACVC,IAAAA,KAAK,EAAE;AADG;AAbsB,CAAlB,CAAlB","sourcesContent":["import React, { Component } from \"react\";\r\nimport \"react-native-gesture-handler\";\r\nimport { StyleSheet, Text, View, TouchableOpacity, Image, TextInput } from \"react-native\";\r\n\r\nclass InputScreen extends Component {\r\n  state = {\r\n    food : '',\r\n    serving : ''\r\n  }\r\n  handleFood = (text) => {\r\n    this.setState({ food : text })\r\n  }\r\n  handleServing = (text) => {\r\n    this.setState( { serving : text })\r\n  }\r\n  render() {\r\n    return (\r\n      <View>\r\n        <View style={styles_is.input_container}>\r\n          <View style={styles_is.input}>\r\n            <TextInput\r\n              placeholder=\"Input your food here\"\r\n              onChangeText = {this.handleFood}\r\n            />\r\n          </View>\r\n          <View style={styles_is.input}>\r\n            <TextInput\r\n              placeholder=\"Serving size\"\r\n              onChangeText= {this.handleServing}\r\n            />\r\n          </View>\r\n        </View>\r\n        <TouchableOpacity\r\n          onPress = {() =>\r\n            alert(food)\r\n          }           \r\n            >\r\n          <View>\r\n            <Text> Alert button </Text>\r\n          </View>\r\n        </TouchableOpacity>\r\n      </View>\r\n    );\r\n  }\r\n};\r\n\r\nexport default InputScreen;\r\n\r\nconst styles_is = StyleSheet.create({\r\n  input_container: {\r\n    backgroundColor: \"#D8D8D6\",\r\n    flexDirection: 'column',\r\n    justifyContent: 'space-around',\r\n    alignItems: 'center',\r\n  },\r\n  input: {\r\n    margin: 50,\r\n    borderWidth: 5,\r\n    borderRadius: 15,\r\n    padding: 40,\r\n  },\r\n  text_input: {\r\n    width: \"auto\",\r\n  }\r\n});\r\n"]},"metadata":{},"sourceType":"module"}