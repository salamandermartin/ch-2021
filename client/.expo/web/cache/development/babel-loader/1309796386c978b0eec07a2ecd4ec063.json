{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/home/goober/cs/ch-2021/client/src/InputScreen.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from \"react\";\nimport \"react-native-gesture-handler\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\n\nvar InputScreen = function (_Component) {\n  _inherits(InputScreen, _Component);\n\n  var _super = _createSuper(InputScreen);\n\n  function InputScreen() {\n    var _this;\n\n    _classCallCheck(this, InputScreen);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.state = {\n      food: '',\n      serving: ''\n    };\n\n    _this.handleFood = function (text) {\n      _this.setState({\n        food: text\n      });\n    };\n\n    _this.handleServing = function (text) {\n      _this.setState({\n        serving: text\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(InputScreen, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(View, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 7\n        }\n      }, React.createElement(View, {\n        style: styles_is.input_container,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 9\n        }\n      }, React.createElement(View, {\n        style: styles_is.input,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 11\n        }\n      }, React.createElement(TextInput, {\n        placeholder: \"Input your food here\",\n        onChangeText: this.handleFood,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 13\n        }\n      })), React.createElement(View, {\n        style: styles_is.input,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 11\n        }\n      }, React.createElement(TextInput, {\n        placeholder: \"Serving size\",\n        onChangeText: this.handleServing,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 13\n        }\n      })), React.createElement(TouchableOpacity, {\n        onPress: this.handleServing,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 11\n        }\n      }, React.createElement(View, {\n        style: styles_is.enter_btn,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 12\n        }\n      }, React.createElement(Text, {\n        style: styles_is.enter_txt,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 12\n        }\n      }, \" Enter \")))));\n    }\n  }]);\n\n  return InputScreen;\n}(Component);\n\n;\nexport default InputScreen;\nvar styles_is = StyleSheet.create({\n  input_container: {\n    backgroundColor: \"#D8D8D6\",\n    flexDirection: 'column',\n    justifyContent: 'space-around',\n    alignItems: 'center'\n  },\n  input: {\n    margin: 50,\n    borderWidth: 5,\n    borderRadius: 15,\n    padding: 40\n  },\n  text_input: {\n    width: \"auto\"\n  },\n  enter_btn: {\n    backgroundColor: '#b6d1c7',\n    padding: 20,\n    borderRadius: 20\n  },\n  enter_txt: {\n    color: '#138f51',\n    fontSize: 25\n  }\n});","map":{"version":3,"sources":["/home/goober/cs/ch-2021/client/src/InputScreen.js"],"names":["React","Component","InputScreen","state","food","serving","handleFood","text","setState","handleServing","styles_is","input_container","input","enter_btn","enter_txt","StyleSheet","create","backgroundColor","flexDirection","justifyContent","alignItems","margin","borderWidth","borderRadius","padding","text_input","width","color","fontSize"],"mappings":";;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,8BAAP;;;;;;;;IAGMC,W;;;;;;;;;;;;;;;UACJC,K,GAAQ;AACNC,MAAAA,IAAI,EAAG,EADD;AAENC,MAAAA,OAAO,EAAG;AAFJ,K;;UAIRC,U,GAAa,UAACC,IAAD,EAAU;AACrB,YAAKC,QAAL,CAAc;AAAEJ,QAAAA,IAAI,EAAGG;AAAT,OAAd;AACD,K;;UACDE,a,GAAgB,UAACF,IAAD,EAAU;AACxB,YAAKC,QAAL,CAAe;AAAEH,QAAAA,OAAO,EAAGE;AAAZ,OAAf;AACD,K;;;;;;;6BAEQ;AACP,aACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAEG,SAAS,CAACC,eAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAED,SAAS,CAACE,KAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,SAAD;AACE,QAAA,WAAW,EAAC,sBADd;AAEE,QAAA,YAAY,EAAI,KAAKN,UAFvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CADF,EAOE,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAEI,SAAS,CAACE,KAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,SAAD;AACE,QAAA,WAAW,EAAC,cADd;AAEE,QAAA,YAAY,EAAG,KAAKH,aAFtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CAPF,EAaE,oBAAC,gBAAD;AACG,QAAA,OAAO,EAAI,KAAKA,aADnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAGC,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAEC,SAAS,CAACG,SAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACA,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAEH,SAAS,CAACI,SAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADA,CAHD,CAbF,CADF,CADF;AAyBD;;;;EAtCuBb,S;;AAuCzB;AAED,eAAeC,WAAf;AAEA,IAAMQ,SAAS,GAAGK,UAAU,CAACC,MAAX,CAAkB;AAClCL,EAAAA,eAAe,EAAE;AACfM,IAAAA,eAAe,EAAE,SADF;AAEfC,IAAAA,aAAa,EAAE,QAFA;AAGfC,IAAAA,cAAc,EAAE,cAHD;AAIfC,IAAAA,UAAU,EAAE;AAJG,GADiB;AAOlCR,EAAAA,KAAK,EAAE;AACLS,IAAAA,MAAM,EAAE,EADH;AAELC,IAAAA,WAAW,EAAE,CAFR;AAGLC,IAAAA,YAAY,EAAE,EAHT;AAILC,IAAAA,OAAO,EAAE;AAJJ,GAP2B;AAalCC,EAAAA,UAAU,EAAE;AACVC,IAAAA,KAAK,EAAE;AADG,GAbsB;AAgBlCb,EAAAA,SAAS,EAAE;AACTI,IAAAA,eAAe,EAAE,SADR;AAETO,IAAAA,OAAO,EAAE,EAFA;AAGTD,IAAAA,YAAY,EAAE;AAHL,GAhBuB;AAqBlCT,EAAAA,SAAS,EAAE;AACTa,IAAAA,KAAK,EAAE,SADE;AAETC,IAAAA,QAAQ,EAAE;AAFD;AArBuB,CAAlB,CAAlB","sourcesContent":["import React, { Component } from \"react\";\nimport \"react-native-gesture-handler\";\nimport { StyleSheet, Text, View, TouchableOpacity, Image, TextInput } from \"react-native\";\n\nclass InputScreen extends Component {\n  state = {\n    food : '',\n    serving : ''\n  }\n  handleFood = (text) => {\n    this.setState({ food : text })\n  }\n  handleServing = (text) => {\n    this.setState( { serving : text })\n  }\n\n  render() {\n    return (\n      <View>\n        <View style={styles_is.input_container}>\n          <View style={styles_is.input}>\n            <TextInput\n              placeholder=\"Input your food here\"\n              onChangeText = {this.handleFood}\n            />\n          </View>\n          <View style={styles_is.input}>\n            <TextInput\n              placeholder=\"Serving size\"\n              onChangeText= {this.handleServing}\n            />\n          </View>\n          <TouchableOpacity\n             onPress = {this.handleServing}\n             >\n           <View style={styles_is.enter_btn}>\n           <Text style={styles_is.enter_txt}> Enter </Text>\n           </View>\n          </TouchableOpacity>\n        </View>\n      </View>\n    );\n  }\n};\n\nexport default InputScreen;\n\nconst styles_is = StyleSheet.create({\n  input_container: {\n    backgroundColor: \"#D8D8D6\",\n    flexDirection: 'column',\n    justifyContent: 'space-around',\n    alignItems: 'center',\n  },\n  input: {\n    margin: 50,\n    borderWidth: 5,\n    borderRadius: 15,\n    padding: 40,\n  },\n  text_input: {\n    width: \"auto\",\n  },\n  enter_btn: {\n    backgroundColor: '#b6d1c7',\n    padding: 20,\n    borderRadius: 20,\n  },\n  enter_txt: {\n    color: '#138f51',\n    fontSize: 25,\n  }\n});\n"]},"metadata":{},"sourceType":"module"}